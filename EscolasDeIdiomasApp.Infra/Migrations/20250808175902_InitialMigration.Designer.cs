// <auto-generated />
using System;
using EscolasDeIdiomasApp.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EscolasDeIdiomasApp.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250808175902_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EscolaDeIdiomasApp.Domain.Entities.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.ToTable("ALUNO", (string)null);
                });

            modelBuilder.Entity("EscolaDeIdiomasApp.Domain.Entities.AlunoTurmas", b =>
                {
                    b.Property<Guid>("IdAluno")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ALUNO_ID");

                    b.Property<Guid>("IdTurma")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TURMA_ID");

                    b.HasKey("IdAluno", "IdTurma");

                    b.HasIndex("IdTurma");

                    b.ToTable("ALUNO_TURMA", (string)null);
                });

            modelBuilder.Entity("EscolaDeIdiomasApp.Domain.Entities.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<int>("Ano")
                        .HasColumnType("int")
                        .HasColumnName("ANO");

                    b.Property<int>("NivelTurma")
                        .HasColumnType("int")
                        .HasColumnName("NIVEL_TURMA");

                    b.Property<int>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.HasKey("Id");

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("TURMA", (string)null);
                });

            modelBuilder.Entity("EscolaDeIdiomasApp.Domain.Entities.AlunoTurmas", b =>
                {
                    b.HasOne("EscolaDeIdiomasApp.Domain.Entities.Aluno", "Aluno")
                        .WithMany("Turmas")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaDeIdiomasApp.Domain.Entities.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("EscolaDeIdiomasApp.Domain.Entities.Aluno", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("EscolaDeIdiomasApp.Domain.Entities.Turma", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
